/**
 * Autogenerated by Avro
 * 
 * DO NOT EDIT DIRECTLY
 */
package example.avro;  
@SuppressWarnings("all")
/** 用户类-测试使用 */
@org.apache.avro.specific.AvroGenerated
public class User extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = 1731384041942938200L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"User\",\"namespace\":\"example.avro\",\"doc\":\"用户类-测试使用\",\"fields\":[{\"name\":\"is_pass\",\"type\":\"boolean\"},{\"name\":\"name\",\"type\":\"string\"},{\"name\":\"age\",\"type\":\"int\"},{\"name\":\"id_card\",\"type\":\"long\"},{\"name\":\"height\",\"type\":\"float\"},{\"name\":\"money\",\"type\":\"double\"},{\"name\":\"score_level\",\"type\":\"bytes\"},{\"name\":\"phone\",\"type\":\"string\"},{\"name\":\"love_color\",\"type\":[\"string\",\"null\"]}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
  @Deprecated public boolean is_pass;
  @Deprecated public java.lang.CharSequence name;
  @Deprecated public int age;
  @Deprecated public long id_card;
  @Deprecated public float height;
  @Deprecated public double money;
  @Deprecated public java.nio.ByteBuffer score_level;
  @Deprecated public java.lang.CharSequence phone;
  @Deprecated public java.lang.CharSequence love_color;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>. 
   */
  public User() {}

  /**
   * All-args constructor.
   */
  public User(java.lang.Boolean is_pass, java.lang.CharSequence name, java.lang.Integer age, java.lang.Long id_card, java.lang.Float height, java.lang.Double money, java.nio.ByteBuffer score_level, java.lang.CharSequence phone, java.lang.CharSequence love_color) {
    this.is_pass = is_pass;
    this.name = name;
    this.age = age;
    this.id_card = id_card;
    this.height = height;
    this.money = money;
    this.score_level = score_level;
    this.phone = phone;
    this.love_color = love_color;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call. 
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return is_pass;
    case 1: return name;
    case 2: return age;
    case 3: return id_card;
    case 4: return height;
    case 5: return money;
    case 6: return score_level;
    case 7: return phone;
    case 8: return love_color;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }
  // Used by DatumReader.  Applications should not call. 
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: is_pass = (java.lang.Boolean)value$; break;
    case 1: name = (java.lang.CharSequence)value$; break;
    case 2: age = (java.lang.Integer)value$; break;
    case 3: id_card = (java.lang.Long)value$; break;
    case 4: height = (java.lang.Float)value$; break;
    case 5: money = (java.lang.Double)value$; break;
    case 6: score_level = (java.nio.ByteBuffer)value$; break;
    case 7: phone = (java.lang.CharSequence)value$; break;
    case 8: love_color = (java.lang.CharSequence)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'is_pass' field.
   */
  public java.lang.Boolean getIsPass() {
    return is_pass;
  }

  /**
   * Sets the value of the 'is_pass' field.
   * @param value the value to set.
   */
  public void setIsPass(java.lang.Boolean value) {
    this.is_pass = value;
  }

  /**
   * Gets the value of the 'name' field.
   */
  public java.lang.CharSequence getName() {
    return name;
  }

  /**
   * Sets the value of the 'name' field.
   * @param value the value to set.
   */
  public void setName(java.lang.CharSequence value) {
    this.name = value;
  }

  /**
   * Gets the value of the 'age' field.
   */
  public java.lang.Integer getAge() {
    return age;
  }

  /**
   * Sets the value of the 'age' field.
   * @param value the value to set.
   */
  public void setAge(java.lang.Integer value) {
    this.age = value;
  }

  /**
   * Gets the value of the 'id_card' field.
   */
  public java.lang.Long getIdCard() {
    return id_card;
  }

  /**
   * Sets the value of the 'id_card' field.
   * @param value the value to set.
   */
  public void setIdCard(java.lang.Long value) {
    this.id_card = value;
  }

  /**
   * Gets the value of the 'height' field.
   */
  public java.lang.Float getHeight() {
    return height;
  }

  /**
   * Sets the value of the 'height' field.
   * @param value the value to set.
   */
  public void setHeight(java.lang.Float value) {
    this.height = value;
  }

  /**
   * Gets the value of the 'money' field.
   */
  public java.lang.Double getMoney() {
    return money;
  }

  /**
   * Sets the value of the 'money' field.
   * @param value the value to set.
   */
  public void setMoney(java.lang.Double value) {
    this.money = value;
  }

  /**
   * Gets the value of the 'score_level' field.
   */
  public java.nio.ByteBuffer getScoreLevel() {
    return score_level;
  }

  /**
   * Sets the value of the 'score_level' field.
   * @param value the value to set.
   */
  public void setScoreLevel(java.nio.ByteBuffer value) {
    this.score_level = value;
  }

  /**
   * Gets the value of the 'phone' field.
   */
  public java.lang.CharSequence getPhone() {
    return phone;
  }

  /**
   * Sets the value of the 'phone' field.
   * @param value the value to set.
   */
  public void setPhone(java.lang.CharSequence value) {
    this.phone = value;
  }

  /**
   * Gets the value of the 'love_color' field.
   */
  public java.lang.CharSequence getLoveColor() {
    return love_color;
  }

  /**
   * Sets the value of the 'love_color' field.
   * @param value the value to set.
   */
  public void setLoveColor(java.lang.CharSequence value) {
    this.love_color = value;
  }

  /**
   * Creates a new User RecordBuilder.
   * @return A new User RecordBuilder
   */
  public static example.avro.User.Builder newBuilder() {
    return new example.avro.User.Builder();
  }
  
  /**
   * Creates a new User RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new User RecordBuilder
   */
  public static example.avro.User.Builder newBuilder(example.avro.User.Builder other) {
    return new example.avro.User.Builder(other);
  }
  
  /**
   * Creates a new User RecordBuilder by copying an existing User instance.
   * @param other The existing instance to copy.
   * @return A new User RecordBuilder
   */
  public static example.avro.User.Builder newBuilder(example.avro.User other) {
    return new example.avro.User.Builder(other);
  }
  
  /**
   * RecordBuilder for User instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<User>
    implements org.apache.avro.data.RecordBuilder<User> {

    private boolean is_pass;
    private java.lang.CharSequence name;
    private int age;
    private long id_card;
    private float height;
    private double money;
    private java.nio.ByteBuffer score_level;
    private java.lang.CharSequence phone;
    private java.lang.CharSequence love_color;

    /** Creates a new Builder */
    private Builder() {
      super(example.avro.User.SCHEMA$);
    }
    
    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(example.avro.User.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.is_pass)) {
        this.is_pass = data().deepCopy(fields()[0].schema(), other.is_pass);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.name)) {
        this.name = data().deepCopy(fields()[1].schema(), other.name);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.age)) {
        this.age = data().deepCopy(fields()[2].schema(), other.age);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.id_card)) {
        this.id_card = data().deepCopy(fields()[3].schema(), other.id_card);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.height)) {
        this.height = data().deepCopy(fields()[4].schema(), other.height);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.money)) {
        this.money = data().deepCopy(fields()[5].schema(), other.money);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.score_level)) {
        this.score_level = data().deepCopy(fields()[6].schema(), other.score_level);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.phone)) {
        this.phone = data().deepCopy(fields()[7].schema(), other.phone);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.love_color)) {
        this.love_color = data().deepCopy(fields()[8].schema(), other.love_color);
        fieldSetFlags()[8] = true;
      }
    }
    
    /**
     * Creates a Builder by copying an existing User instance
     * @param other The existing instance to copy.
     */
    private Builder(example.avro.User other) {
            super(example.avro.User.SCHEMA$);
      if (isValidValue(fields()[0], other.is_pass)) {
        this.is_pass = data().deepCopy(fields()[0].schema(), other.is_pass);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.name)) {
        this.name = data().deepCopy(fields()[1].schema(), other.name);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.age)) {
        this.age = data().deepCopy(fields()[2].schema(), other.age);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.id_card)) {
        this.id_card = data().deepCopy(fields()[3].schema(), other.id_card);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.height)) {
        this.height = data().deepCopy(fields()[4].schema(), other.height);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.money)) {
        this.money = data().deepCopy(fields()[5].schema(), other.money);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.score_level)) {
        this.score_level = data().deepCopy(fields()[6].schema(), other.score_level);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.phone)) {
        this.phone = data().deepCopy(fields()[7].schema(), other.phone);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.love_color)) {
        this.love_color = data().deepCopy(fields()[8].schema(), other.love_color);
        fieldSetFlags()[8] = true;
      }
    }

    /**
      * Gets the value of the 'is_pass' field.
      * @return The value.
      */
    public java.lang.Boolean getIsPass() {
      return is_pass;
    }

    /**
      * Sets the value of the 'is_pass' field.
      * @param value The value of 'is_pass'.
      * @return This builder.
      */
    public example.avro.User.Builder setIsPass(boolean value) {
      validate(fields()[0], value);
      this.is_pass = value;
      fieldSetFlags()[0] = true;
      return this; 
    }

    /**
      * Checks whether the 'is_pass' field has been set.
      * @return True if the 'is_pass' field has been set, false otherwise.
      */
    public boolean hasIsPass() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'is_pass' field.
      * @return This builder.
      */
    public example.avro.User.Builder clearIsPass() {
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'name' field.
      * @return The value.
      */
    public java.lang.CharSequence getName() {
      return name;
    }

    /**
      * Sets the value of the 'name' field.
      * @param value The value of 'name'.
      * @return This builder.
      */
    public example.avro.User.Builder setName(java.lang.CharSequence value) {
      validate(fields()[1], value);
      this.name = value;
      fieldSetFlags()[1] = true;
      return this; 
    }

    /**
      * Checks whether the 'name' field has been set.
      * @return True if the 'name' field has been set, false otherwise.
      */
    public boolean hasName() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'name' field.
      * @return This builder.
      */
    public example.avro.User.Builder clearName() {
      name = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'age' field.
      * @return The value.
      */
    public java.lang.Integer getAge() {
      return age;
    }

    /**
      * Sets the value of the 'age' field.
      * @param value The value of 'age'.
      * @return This builder.
      */
    public example.avro.User.Builder setAge(int value) {
      validate(fields()[2], value);
      this.age = value;
      fieldSetFlags()[2] = true;
      return this; 
    }

    /**
      * Checks whether the 'age' field has been set.
      * @return True if the 'age' field has been set, false otherwise.
      */
    public boolean hasAge() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'age' field.
      * @return This builder.
      */
    public example.avro.User.Builder clearAge() {
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'id_card' field.
      * @return The value.
      */
    public java.lang.Long getIdCard() {
      return id_card;
    }

    /**
      * Sets the value of the 'id_card' field.
      * @param value The value of 'id_card'.
      * @return This builder.
      */
    public example.avro.User.Builder setIdCard(long value) {
      validate(fields()[3], value);
      this.id_card = value;
      fieldSetFlags()[3] = true;
      return this; 
    }

    /**
      * Checks whether the 'id_card' field has been set.
      * @return True if the 'id_card' field has been set, false otherwise.
      */
    public boolean hasIdCard() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'id_card' field.
      * @return This builder.
      */
    public example.avro.User.Builder clearIdCard() {
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
      * Gets the value of the 'height' field.
      * @return The value.
      */
    public java.lang.Float getHeight() {
      return height;
    }

    /**
      * Sets the value of the 'height' field.
      * @param value The value of 'height'.
      * @return This builder.
      */
    public example.avro.User.Builder setHeight(float value) {
      validate(fields()[4], value);
      this.height = value;
      fieldSetFlags()[4] = true;
      return this; 
    }

    /**
      * Checks whether the 'height' field has been set.
      * @return True if the 'height' field has been set, false otherwise.
      */
    public boolean hasHeight() {
      return fieldSetFlags()[4];
    }


    /**
      * Clears the value of the 'height' field.
      * @return This builder.
      */
    public example.avro.User.Builder clearHeight() {
      fieldSetFlags()[4] = false;
      return this;
    }

    /**
      * Gets the value of the 'money' field.
      * @return The value.
      */
    public java.lang.Double getMoney() {
      return money;
    }

    /**
      * Sets the value of the 'money' field.
      * @param value The value of 'money'.
      * @return This builder.
      */
    public example.avro.User.Builder setMoney(double value) {
      validate(fields()[5], value);
      this.money = value;
      fieldSetFlags()[5] = true;
      return this; 
    }

    /**
      * Checks whether the 'money' field has been set.
      * @return True if the 'money' field has been set, false otherwise.
      */
    public boolean hasMoney() {
      return fieldSetFlags()[5];
    }


    /**
      * Clears the value of the 'money' field.
      * @return This builder.
      */
    public example.avro.User.Builder clearMoney() {
      fieldSetFlags()[5] = false;
      return this;
    }

    /**
      * Gets the value of the 'score_level' field.
      * @return The value.
      */
    public java.nio.ByteBuffer getScoreLevel() {
      return score_level;
    }

    /**
      * Sets the value of the 'score_level' field.
      * @param value The value of 'score_level'.
      * @return This builder.
      */
    public example.avro.User.Builder setScoreLevel(java.nio.ByteBuffer value) {
      validate(fields()[6], value);
      this.score_level = value;
      fieldSetFlags()[6] = true;
      return this; 
    }

    /**
      * Checks whether the 'score_level' field has been set.
      * @return True if the 'score_level' field has been set, false otherwise.
      */
    public boolean hasScoreLevel() {
      return fieldSetFlags()[6];
    }


    /**
      * Clears the value of the 'score_level' field.
      * @return This builder.
      */
    public example.avro.User.Builder clearScoreLevel() {
      score_level = null;
      fieldSetFlags()[6] = false;
      return this;
    }

    /**
      * Gets the value of the 'phone' field.
      * @return The value.
      */
    public java.lang.CharSequence getPhone() {
      return phone;
    }

    /**
      * Sets the value of the 'phone' field.
      * @param value The value of 'phone'.
      * @return This builder.
      */
    public example.avro.User.Builder setPhone(java.lang.CharSequence value) {
      validate(fields()[7], value);
      this.phone = value;
      fieldSetFlags()[7] = true;
      return this; 
    }

    /**
      * Checks whether the 'phone' field has been set.
      * @return True if the 'phone' field has been set, false otherwise.
      */
    public boolean hasPhone() {
      return fieldSetFlags()[7];
    }


    /**
      * Clears the value of the 'phone' field.
      * @return This builder.
      */
    public example.avro.User.Builder clearPhone() {
      phone = null;
      fieldSetFlags()[7] = false;
      return this;
    }

    /**
      * Gets the value of the 'love_color' field.
      * @return The value.
      */
    public java.lang.CharSequence getLoveColor() {
      return love_color;
    }

    /**
      * Sets the value of the 'love_color' field.
      * @param value The value of 'love_color'.
      * @return This builder.
      */
    public example.avro.User.Builder setLoveColor(java.lang.CharSequence value) {
      validate(fields()[8], value);
      this.love_color = value;
      fieldSetFlags()[8] = true;
      return this; 
    }

    /**
      * Checks whether the 'love_color' field has been set.
      * @return True if the 'love_color' field has been set, false otherwise.
      */
    public boolean hasLoveColor() {
      return fieldSetFlags()[8];
    }


    /**
      * Clears the value of the 'love_color' field.
      * @return This builder.
      */
    public example.avro.User.Builder clearLoveColor() {
      love_color = null;
      fieldSetFlags()[8] = false;
      return this;
    }

    @Override
    public User build() {
      try {
        User record = new User();
        record.is_pass = fieldSetFlags()[0] ? this.is_pass : (java.lang.Boolean) defaultValue(fields()[0]);
        record.name = fieldSetFlags()[1] ? this.name : (java.lang.CharSequence) defaultValue(fields()[1]);
        record.age = fieldSetFlags()[2] ? this.age : (java.lang.Integer) defaultValue(fields()[2]);
        record.id_card = fieldSetFlags()[3] ? this.id_card : (java.lang.Long) defaultValue(fields()[3]);
        record.height = fieldSetFlags()[4] ? this.height : (java.lang.Float) defaultValue(fields()[4]);
        record.money = fieldSetFlags()[5] ? this.money : (java.lang.Double) defaultValue(fields()[5]);
        record.score_level = fieldSetFlags()[6] ? this.score_level : (java.nio.ByteBuffer) defaultValue(fields()[6]);
        record.phone = fieldSetFlags()[7] ? this.phone : (java.lang.CharSequence) defaultValue(fields()[7]);
        record.love_color = fieldSetFlags()[8] ? this.love_color : (java.lang.CharSequence) defaultValue(fields()[8]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  private static final org.apache.avro.io.DatumWriter
    WRITER$ = new org.apache.avro.specific.SpecificDatumWriter(SCHEMA$);  

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, org.apache.avro.specific.SpecificData.getEncoder(out));
  }

  private static final org.apache.avro.io.DatumReader
    READER$ = new org.apache.avro.specific.SpecificDatumReader(SCHEMA$);  

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, org.apache.avro.specific.SpecificData.getDecoder(in));
  }

}
