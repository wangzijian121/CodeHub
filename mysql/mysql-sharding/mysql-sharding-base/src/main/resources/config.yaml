mode:
  type: Standalone
  repository:
    type: JDBC

props:
  host: localhost
  port: 3306
  username: root
  password: 123456

dataSources:
  ds_1:
    dataSourceClassName: com.zaxxer.hikari.HikariDataSource
    driverClassName: com.mysql.jdbc.Driver
    jdbcUrl: jdbc:mysql://192.168.56.103:3306/db_1?allowPublicKeyRetrieval=TRUE
    username: root
    password: root

  ds_2:
    dataSourceClassName: com.zaxxer.hikari.HikariDataSource
    driverClassName: com.mysql.jdbc.Driver
    jdbcUrl: jdbc:mysql://192.168.56.104:3306/db_2?allowPublicKeyRetrieval=TRUE
    username: root
    password: root

  ds_3:
    dataSourceClassName: com.zaxxer.hikari.HikariDataSource
    driverClassName: com.mysql.jdbc.Driver
    jdbcUrl: jdbc:mysql://192.168.56.105:3306/db_3?allowPublicKeyRetrieval=TRUE
    username: root
    password: root


# 规则：【数据库->表->分片策略、分布式序列策略、审计策略->算法】
rules:
  - !SHARDING
    tables: # 一、数据分片规则配置
      t_order: # 1.逻辑表名称
        actualDataNodes: ds_1.order_1,ds_2.order_2,ds_3.order_3 #2.由数据源名 + 表名组成（参考 Inline 语法规则）

        databaseStrategy: # 默认数据库分片策略
          standard:
            shardingColumn: customer_id
            shardingAlgorithmName: database_inline

        tableStrategy: #3.分表策略分库策略
          standard:
            shardingColumn: customer_id
            shardingAlgorithmName: t_order_inline

          #      keyGenerateStrategy: # 4.分布式序列策略
          #        column: cid
          #        keyGeneratorName: snowflake

        auditStrategy: # 5.分片审计策略
          auditorNames:
            - sharding_key_required_auditor
          allowHintDisable: true


      #二、默认配置
    defaultDatabaseStrategy: # 默认数据库分片策略
      standard:
        shardingColumn: customer_id
        shardingAlgorithmName: database_inline

    defaultTableStrategy: # 默认表分片策略

    defaultKeyGenerateStrategy: # 默认的分布式序列策略
    defaultShardingColumn: # 默认分片列名称


    #三、算法
    # 分片算法配置
    shardingAlgorithms:

      database_inline: #1. 数据库默认分片算法名
        type: INLINE   #2. 数据库默认分片算法类型
        props:         #3. 数据库默认分片算法属性
          algorithm-expression: ds_${customer_id % 3 + 1 }
          allow-range-query-with-inline-sharding: true

      t_order_inline: #1. user分片算法名，同上
        type: INLINE
        props:
          algorithm-expression: order_${customer_id % 3 + 1}
          allow-range-query-with-inline-sharding: true

    keyGenerators:
      snowflake:
        type: SNOWFLAKE

    auditors:
      sharding_key_required_auditor:
        type: DML_SHARDING_CONDITIONS